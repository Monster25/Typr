<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_game_control.mode_to_play == 0)
message = "Type the sentence on-screen!"
else
message = "Try to type the 'sentence' on-screen!";

message2 = "GET READY!"; 

full_message = message;

characters = 0;
increase = 0.5;
message_draw = "";
draw_number = 3;

ok = 1;
ok2 = 0;

i = 0;


alarm[1] = 3*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ok2 = 1;
alarm[0] = 1*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_number--;
if (draw_number &gt; 0)
alarm[0] = 1*room_speed;
else
{
switch(obj_game_control.mode_to_play)
{
case 0:
with(obj_game_control)
state_switch("classic")
break;
case 1:
with(obj_game_control)
state_switch("gibbrsh")
break;
}

if (room_exists(asset_get_index("rm_level")))
{
    room_goto(asset_get_index("rm_level"));
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Typewriter
if (characters &lt; string_length(full_message)) { //if current character count is less than the amount in current message* 
    //hold = keybstrinoard_check(ord("Z")); //hold is true or false if we hold 'Z' or not
    characters += increase //* (1 + hold); //increase speed based on hold
    message_draw = string_copy(full_message, 0, characters); //copy string to current character
}
else if(ok == 1)
{
ok = 0;
//alarm[0] = 2*random_range(1,3)*room_speed;
}

/* 
else { //if current character is more than the amount in the current message
        if (message_current &lt; message_end) { //if there are more messages left to show (0 -&gt; 6, in our case)
            message_current += 1; //increase the message by 1
            message_length = string_length(message[message_current]);  //get the new character length for message
            characters = 0; //set the characters back to 0
            message_draw = ""; //clear the drawn text
        }
        else { //if our messages are done (we reach 6, in our case)...
            instance_destroy(); //destroy the object
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw animation
draw_set_font(fnt_text)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
//draw_text(global.displayWidth/2,0+sprite_get_height(spr_logo)*0.25, message_draw); //draw the text at the coordinates

//draw_set_color(obj_game_control.bg_colors[obj_game_control.color_combo,1]);
scr_draw_text_outline(round(global.displayWidth/2),round(global.displayHeight/3), obj_game_control.bg_colors[obj_game_control.color_combo,1], obj_game_control.bg_colors[obj_game_control.color_combo,3],message_draw);

if (ok2 &gt; 0)
scr_draw_text_outline(round(global.displayWidth/2),round(global.displayHeight/2.5), obj_game_control.bg_colors[obj_game_control.color_combo,1], obj_game_control.bg_colors[obj_game_control.color_combo,3],message2);

if (draw_number &gt; 0 &amp;&amp; ok2 &gt; 0)
scr_draw_text_outline(round(global.displayWidth/2),round(global.displayHeight/2), obj_game_control.bg_colors[obj_game_control.color_combo,1], obj_game_control.bg_colors[obj_game_control.color_combo,3],"..."+string(draw_number));

scr_draw_text_outline(round(global.displayWidth/2),round(global.displayHeight/1.2),obj_game_control.bg_colors[obj_game_control.color_combo,1], obj_game_control.bg_colors[obj_game_control.color_combo,3],"F1 - Mute Music
F2 - Mute Sound Effects
ESC - Main Menu")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
