<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Machine
state_machine_init();

//Define States
state_create("menu",scr_game_menu);
state_create("classic",scr_game_classic);
state_create("gibbrsh",scr_game_gibbrsh);
state_create("scoreboard",scr_game_scoreboard);
//Default State
state_init("menu");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Classic Mode Variables
time_gain_classic = 0.15; //per letter
initial_time_classic = 20; //initial time
current_paragraph = 0;
//Used for word numbering in paragraph
word_index = 1;

//Array of words for current paragraph
words[0] = noone;
current_word = 0; //array index
paragraph_count = 0; //counter for nr of paragraphs completed
//Limits for paragraph generation
difficulty_changer_classic = 0;
//[nr of paragrahps to get to, difficulty level]
difficulty_ceiling_classic[0] = 2;
difficulty_ceiling_classic[1] = 5;
difficulty_ceiling_classic[2] = 8;

//Sentence for display
full_sentence = "";


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_game_control</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gibrrsh Mode Variables
initial_time_gibbrsh = 20; //initial time for this mode

time_gain_gibbrsh = 0.45; //per letter



//Limits for word generation
limiter = 0;
//[Lower limit, Higher Limit, nr of paragraphs to get past it, lower limit of words in para, higher limit of words in para]
letter_limits[0,0] = 3;
letter_limits[0,1] = 8;
letter_limits[0,2] = 2;
letter_limits[0,3] = 3;
letter_limits[0,4] = 6;

letter_limits[1,0] = 5;
letter_limits[1,1] = 8;
letter_limits[1,2] = 4;
letter_limits[1,3] = 4;
letter_limits[1,4] = 7;

letter_limits[2,0] = 8;
letter_limits[2,1] = 14;
letter_limits[2,2] = 6;
letter_limits[2,3] = 1;
letter_limits[2,4] = 2;

//Difficulties
current_difficulty_gibbrsh = 0; //increasing difficulty level
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Classic Mode Paragraphs
//Academic
academic[0, 0] = "Stefan cel Mare este considerat o personalitate marcanta a istoriei Romaniei.";
academic[0, 1] = "History of the Roman Empire";
academic[0, 2] = 0;

academic[1, 0] = "Palatul Culturii a fost renovat recent.";
academic[1, 1] = "Mythology of Sparta";
academic[1, 2] = 0;

academic[2, 0] = "Ne-am luat vacanta mai devreme ca deobicei.";
academic[2, 1] = "History of the Persian Empire";
academic[2, 2] = 0;

//Qutoes
quotes[0, 0] = "Ana are mere.";
quotes[0, 1] = "Gaius Julius Caesar";
quotes[0, 2] = 0;

quotes[1, 0] = "Canapeaua este foarte comfortabila.";
quotes[1, 1] = "Gaius Julius Caesar";
quotes[1, 2] = 0;

quotes[2, 0] = "Trebuie sa mergem la magazin.";
quotes[2, 1] = "Unknown";
quotes[2, 2] = 0;

quotes[3, 0] = "Cerul este albastru.";
quotes[3, 1] = "cacat;";
quotes[3, 2] = 0;

quotes[3, 0] = "Dupa moartea lui Haci Ghirai a izbucnit lupta pentru tron intre fii hanului.";
quotes[3, 1] = "cacat";
quotes[3, 2] = 0;

//Artistic
artistic[0, 0] = "Dupa moartea lui Haci Ghirai a izbucnit lupta pentru tron intre fii hanului.";
artistic[0, 1] = "That's it - Bebe Rexha";
artistic[0, 2] = 0;

artistic[1, 0] = "Hanatul Crimeii a fost cea mai importanta forta militara din Europa Rasariteana.";
artistic[1, 1] = "Stronger - Kanye West";
artistic[1, 2] = 0;

artistic[2, 0] = "Mama face prajituri.";
artistic[2, 1] = "Rap God - Eminem";
artistic[2, 2] = 0;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables for both modes
//Randomize seed
randomize()
//Player Input
player_input = "";
//Random Word
display_word = "";
//Real Time Variable
real_time = 0;
//Time Variable
time = 0;
//Score Variable
best_score = 0;
//Color
color = c_white;
//Check if you're still typing
pressed = 0;


//Misc vars
//Used for word checking
i = -1;
j = -1;

//Used for correct letter checking for combos
ok = 1;
z = -1;

word_count = 0; //word count 
letter_count_correct = 0; //letter count
best_letter_count = 0; //best letter count
//Combos
comboer = 0;
//[letter count required to proceed to next level, combo reward multiplied by score x actual level]
letter_combo[0, 0] = 25;
letter_combo[0, 1] = 1.0;

letter_combo[1, 0] = 50;
letter_combo[1, 1] = 1.5;

letter_combo[2, 0] = 75;
letter_combo[2, 1] = 1.8;

letter_combo[3, 0] = 100;
letter_combo[3, 1] = 2;

//Colors
color_combo = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Final stats on a run
final_score = 0;
final_combo = 0;
final_words = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colors
//Correct text colors
text_colors[0] = make_color_rgb(255,193,6); // Orange
text_colors[1] = make_color_rgb(6,68,255); //blue


//Dark Bg
bg_colors[0, 0] = make_color_rgb(8,48,69);
bg_colors[0, 1] = c_white;
bg_colors[0, 2] = text_colors[0];
bg_colors[0, 3] = c_black; //outline

bg_colors[1, 0] = c_black;
bg_colors[1, 1] = c_white;
bg_colors[1, 2] = text_colors[0];
bg_colors[1, 3] = c_black; //outline

bg_colors[2, 0] = make_color_rgb(16,120,149);
bg_colors[2, 1] = c_white;
bg_colors[2, 2] = text_colors[0];
bg_colors[2, 3] = c_black; //outline

bg_colors[3, 0] = make_color_rgb(16, 55, 106);
bg_colors[3, 1] = c_white;
bg_colors[3, 2] = text_colors[0];
bg_colors[3, 3] = c_black; //outline

bg_colors[4, 0] = make_color_rgb(65, 37, 106);
bg_colors[4, 1] = c_white;
bg_colors[4, 2] = text_colors[0];
bg_colors[4, 3] = c_black; //outline

bg_colors[5, 0] = make_color_rgb(65, 37, 67);
bg_colors[5, 1] = c_white;
bg_colors[5, 2] = text_colors[0];
bg_colors[5, 3] = c_black; //outline

bg_colors[6, 0] = make_color_rgb(65, 64, 67);
bg_colors[6, 1] = c_white;
bg_colors[6, 2] = text_colors[0];
bg_colors[6, 3] = c_black; //outline

bg_colors[7, 0] = make_color_rgb(15, 64, 67);
bg_colors[7, 1] = c_white;
bg_colors[7, 2] = text_colors[0];
bg_colors[7, 3] = c_black; //outline

bg_colors[8, 0] = make_color_rgb(82, 38, 91);
bg_colors[8, 1] = c_white;
bg_colors[8, 2] = text_colors[0];
bg_colors[8, 3] = c_black; //outline

bg_colors[9, 0] = make_color_rgb(68, 5, 7);
bg_colors[9, 1] = c_white;
bg_colors[9, 2] = text_colors[0];
bg_colors[9, 3] = c_black; //outline

bg_colors[10, 0] = make_color_rgb(72, 84, 13);
bg_colors[10, 1] = c_white;
bg_colors[10, 2] = text_colors[0];
bg_colors[10, 3] = c_black; //outline

bg_colors[11, 0] = make_color_rgb(0, 77, 59);
bg_colors[11, 1] = c_white;
bg_colors[11, 2] = text_colors[0];
bg_colors[11, 3] = c_black; //outline

bg_colors[12, 0] = make_color_rgb(136, 36, 59);
bg_colors[12, 1] = c_white;
bg_colors[12, 2] = text_colors[0];
bg_colors[12, 3] = c_black; //outline

bg_colors[13, 0] = make_color_rgb(28, 109, 103);
bg_colors[13, 1] = c_white;
bg_colors[13, 2] = text_colors[0];
bg_colors[13, 3] = c_black; //outline

bg_colors[14, 0] = make_color_rgb(67, 115, 127);
bg_colors[14, 1] = c_white;
bg_colors[14, 2] = text_colors[0];
bg_colors[14, 3] = c_black; //outline


//Light bg
bg_colors[15, 0] = make_color_rgb(241,243,244);
bg_colors[15, 1] = c_black;
bg_colors[15, 2] = text_colors[1];
bg_colors[15, 3] = c_white; //outline

bg_colors[16, 0] = make_color_rgb(181,197,136);
bg_colors[16, 1] = c_black;
bg_colors[16, 2] = text_colors[1];
bg_colors[16, 3] = c_white; //outline

bg_colors[17, 0] = make_color_rgb(229,222,214);
bg_colors[17, 1] = c_black;
bg_colors[17, 2] = text_colors[1];
bg_colors[17, 3] = c_white; //outline

bg_colors[18, 0] = make_color_rgb(185, 142, 229);
bg_colors[18, 1] = c_black;
bg_colors[18, 2] = text_colors[1];
bg_colors[18, 3] = c_white; //outline

bg_colors[19, 0] = make_color_rgb(206, 214, 229);
bg_colors[19, 1] = c_black;
bg_colors[19, 2] = text_colors[1];
bg_colors[19, 3] = c_white; //outline

bg_colors[20, 0] = make_color_rgb(206, 214, 164);
bg_colors[20, 1] = c_black;
bg_colors[20, 2] = text_colors[1];
bg_colors[20, 3] = c_white; //outline

bg_colors[21, 0] = make_color_rgb(236, 166, 164);
bg_colors[21, 1] = c_black;
bg_colors[21, 2] = text_colors[1];
bg_colors[21, 3] = c_white; //outline

bg_colors[22, 0] = make_color_rgb(253, 246, 24);
bg_colors[22, 1] = c_black;
bg_colors[22, 2] = text_colors[1];
bg_colors[22, 3] = c_white; //outline

bg_colors[23, 0] = make_color_rgb(178, 181, 201);
bg_colors[23, 1] = c_black;
bg_colors[23, 2] = text_colors[1];
bg_colors[23, 3] = c_white; //outline

bg_colors[24, 0] = make_color_rgb(230, 245, 236);
bg_colors[24, 1] = c_black;
bg_colors[24, 2] = text_colors[1];
bg_colors[24, 3] = c_white; //outline

bg_colors[25, 0] = make_color_rgb(191, 186, 236);
bg_colors[25, 1] = c_black;
bg_colors[25, 2] = text_colors[1];
bg_colors[25, 3] = c_white; //outline

bg_colors[26, 0] = make_color_rgb(241, 186, 236);
bg_colors[26, 1] = c_black;
bg_colors[26, 2] = text_colors[1];
bg_colors[26, 3] = c_white; //outline

bg_colors[27, 0] = make_color_rgb(240, 166, 163);
bg_colors[27, 1] = c_black;
bg_colors[27, 2] = text_colors[1];
bg_colors[27, 3] = c_white; //outline

bg_colors[28, 0] = make_color_rgb(183, 254, 253);
bg_colors[28, 1] = c_black;
bg_colors[28, 2] = text_colors[1];
bg_colors[28, 3] = c_white; //outline

bg_colors[29, 0] = make_color_rgb(242, 172, 127);
bg_colors[29, 1] = c_black;
bg_colors[29, 2] = text_colors[1];
bg_colors[29, 3] = c_white; //outline
















</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///misc
music_playing = 1;
se_playing = 1;
amb_playing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update State
state_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Execute
state_execute();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (se_playing)
{
audio_group_set_gain(soundeffects, 0, 0);
se_playing = 0;
}
else
{
audio_group_set_gain(soundeffects, 1, 0);
se_playing = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (music_playing)
{
audio_group_set_gain(music, 0, 0);
music_playing = 0;
}
else
{
audio_group_set_gain(music, 1, 0);
music_playing = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
