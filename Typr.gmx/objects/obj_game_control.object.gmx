<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Machine
state_machine_init();

//Define States
state_create("menu",scr_game_menu);
state_create("classic",scr_game_classic);
state_create("gibbrsh",scr_game_gibbrsh);
state_create("scoreboard",scr_game_scoreboard);
//Default State
state_init("menu");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Classic Mode Variables
time_gain_classic = 0.15; //per letter
initial_time_classic = 180;   ; //initial time
current_paragraph = 0;
letter_score_classic = 1; //per letter score    
//Used for word numbering in paragraph
word_index = 1;
paragraph_index = 0;
paragraph_pool = 0;

//Array of words for current paragraph
words[0] = noone;
current_word = 0; //array index
paragraph_count = 0; //counter for nr of paragraphs completed
//Limits for paragraph generation
difficulty_changer_classic = 0;
//[nr of paragrahps to get to, difficulty level]
difficulty_ceiling_classic[0] = 4;
difficulty_ceiling_classic[1] = 8;
difficulty_ceiling_classic[2] = 12;

//Sentence for display
full_sentence = "";


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_game_control</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gibrrsh Mode Variables
initial_time_gibbrsh = 180; //initial time for this mode

time_gain_gibbrsh = 0.45; //per letter
letter_score_gibbrsh = 1; //score per letter



//Limits for word generation
limiter = 0;
//[Lower limit, Higher Limit, nr of paragraphs to get past it, lower limit of words in para, higher limit of words in para]
letter_limits[0,0] = 3;
letter_limits[0,1] = 8;
letter_limits[0,2] = 6;
letter_limits[0,3] = 3;
letter_limits[0,4] = 6;

letter_limits[1,0] = 5;
letter_limits[1,1] = 10;
letter_limits[1,2] = 10;
letter_limits[1,3] = 4;
letter_limits[1,4] = 7;

letter_limits[2,0] = 8;
letter_limits[2,1] = 14;
letter_limits[2,2] = 14;
letter_limits[2,3] = 1;
letter_limits[2,4] = 2;

//Difficulties
current_difficulty_gibbrsh = 0; //increasing difficulty level
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Classic Mode Paragraphs
//Academic (wikipedia and historical evidence)
academic[0, 0] = "In 212, during the reign of Caracalla, Roman citizenship was granted to all freeborn inhabitants of the Empire.";
academic[0, 1] = "History of the Roman Empire";

academic[1, 0] = "The blade was sharpened only on the inside and was reputed to be devastatingly effective.";
academic[1, 1] = "The Dacian Falx";

academic[2, 0] = "Mercury is a heavy, silvery-white liquid metal. Compared to other metals, it is a poor conductor of heat.";
academic[2, 1] = "Mercury (element)";

academic[3, 0] = "In 85 BC, Caesar's father died suddenly, so Caesar became the head of the family at 16.";
academic[3, 1] = "Gaius Julius Caesar";

academic[4, 0] = "The Benedictines are a Catholic religious order of enclosed monks and nuns that follow the Rule of Saint Benedict.";
academic[4, 1] = "The Benedictines";

academic[5, 0] = "Clarke's father, Daniel Clarke, was a Scottish weaver who came to America for the American Revolution.";
academic[5, 1] = "Lewis Clarke";

academic[6, 0] = "The Dacia of King Burebista, stretched from the Black Sea to the river Tisa and from the Balkan Mountains to Bohemia.";
academic[6, 1] = "The Geography of Dacia";

academic[7, 0] = "Globally, the Revolution accelerated the rise of republics and democracies.";
academic[7, 1] = "The French Revolution";

academic[8, 0] = "King Harold accepted a truce with the surviving Norwegians, including Harald's son Olaf and Paul Thorfinnsson.";
academic[8, 1] = "The Battle of Stamford Bridge (1066)";

academic[9, 0] = "After the mid-September Polish defeat in the Battle of the Bzura, the Germans gained an undisputed advantage.";
academic[9, 1] = "The Invasion of Poland (1939)";

academic[10, 0] = "In 1904, Usubov participated in the Russo-Japanese War in the rank of Stabskapitan.";
academic[10, 1] = "Ibrahim bey Usubov";

academic[11, 0] = "The decoration is worn around the neck on its accompanying narrow blue and white ribbon.";
academic[11, 1] = "Cross of Honour of the German Mother (1939 - 1945)";

academic[12, 0] = "The Knights wore white surcoats with a black cross. A cross patern was sometimes used as their coat of arms.";
academic[12, 1] = "The Teutonic Order";

academic[13, 0] = "The city's location made it master of the Mediterranean's maritime trade.";
academic[13, 1] = "Carthage";

academic[14, 0] = "The insignia of the kings of Rome were twelve lictors wielding the fasces (bundles) bearing axes.";
academic[14, 1] = "The Roman Kingdom";

academic[15, 0] = "The earliest undisputed direct examples of a Celtic language are the Lepontic inscriptions beginning in the 6th century BC.";
academic[15, 1] = "The Celts";

academic[16, 0] = "Animals shown are often representations of the gods, another continuing feature of Mesopotamian art.";
academic[16, 1] = "The Art of Ancient Mesopotamia";

academic[17, 0] = "Written sources evidence that the relationship between Stephen and Vlad Dracula became tense in early 1462.";
academic[17, 1] = "Stephen the Great of Moldavia";

academic[18, 0] = "Metals are good conductors because they have unfilled space in the valence energy band.";
academic[18, 1] = "Electrical Conduction";

academic[19, 0] = "Knives such as the seax and other blades of similar length, between 1 and 2 feet, are sometimes construed as swords.";
academic[19, 1] = "Classification of Swords";

academic[20, 0] = "The softness of copper partly explains its high electrical and thermal conductivity.";
academic[20, 1] = "Copper (element)";

academic[21, 0] = "There are ongoing investigations assessing the past habitability potential of Mars, as well as the possibility of extant life.";
academic[21, 1] = "Mars (planet)";

academic[22, 0] = "Trees play a significant role in reducing erosion and moderating the climate.";
academic[22, 1] = "Trees";

academic[23, 0] = "An alternative name for England is Albion. The name Albion originally referred to the entire island of Great Britain.";
academic[23, 1] = "Etymology of England";

academic[24, 0] = "The oldest proto-human bones discovered in England date from 500,000 years ago.";
academic[24, 1] = "England";

academic[25, 0] = "There is enough DNA in the average person's body to stretch from the sun to Pluto and back, 17 times.";
academic[25, 1] = "Scientific Facts #1";

academic[26, 0] = "The average human body carries ten times more bacterial cells than human cells.";
academic[26, 1] = "Scientific Facts #2";

academic[27, 0] = "At over 2000 kilometers long, The Great Barrier Reef is the largest living structure on Earth.";
academic[27, 1] = "Scientific Facts #3";

academic[28, 0] = "In an entire lifetime, the average person walks the equivalent of five times around the world.";
academic[28, 1] = "Scientific Facts #4";

academic[29, 0] = "An individual blood cell takes about 60 seconds to make a complete circuit of the body.";
academic[29, 1] = "Scientific Facts #5";

academic[30, 0] = "Giant penguins about the size of a grown man waddled around New Zealand about 59 million years ago.";
academic[30, 1] = "Scientific Facts #6";

academic[31, 0] = "The world's smallest fidget spinner is 100 microns wide.";
academic[31, 1] = "Scientific Facts #7";

academic[32, 0] = "Precious metals on earth, such as gold and platinum, have originated in the stars.";
academic[32, 1] = "Scientific Facts #8";

academic[33, 0] = "The moon once had an atmosphere.";
academic[33, 1] = "Scientific Facts #9";

academic[34, 0] = "Babies have around 100 more bones than adults.";
academic[34, 1] = "Scientific Facts #10";

academic[35, 0] = "The Eiffel Tower can be 15 cm taller during the summer.";
academic[35, 1] = "Scientific Facts #11";

academic[36, 0] = "A fifth of Earth's oxygen is produced by the Amazon rainforest";
academic[36, 1] = "Scientific Facts #12";

academic[37, 0] = "Some metals are so reactive that they explode on contact with water.";
academic[37, 1] = "Scientific Facts #13";

academic[38, 0] = "A teaspoonful of neutron star would weigh 6 billion tons.";
academic[38, 1] = "Scientific Facts #14";

academic[39, 0] = "Hawaii moves 7.5 cm closer to Alaska every year.";
academic[39, 1] = "Scientific Facts #15";

academic[40, 0] = "Chalk is made from trillions of microscopic plankton fossils.";
academic[40, 1] = "Scientific Facts #16";

academic[41, 0] = "In 2.3 billion years it will be too hot for life to exist on Earth.";
academic[41, 1] = "Scientific Facts #17";

academic[42, 0] = "Polar bears are nearly undetectable by infrared cameras.";
academic[42, 1] = "Scientific Facts #18";

academic[43, 0] = "It takes 8 minutes, 19 seconds for light to travel from the Sun to the Earth.";
academic[43, 1] = "Scientific Facts #19";

academic[44, 0] = "If you took out all the empty space in our atoms, the human race could fit in the volume of a sugar cube.";
academic[44, 1] = "Scientific Facts #20";

academic[45, 0] = "Stomach acid is strong enough to dissolve stainless steel.";
academic[45, 1] = "Scientific Facts #21";

academic[46, 0] = "The Earth is a giant magnet. Its magnetic field is used by compass needles worldwide.";
academic[46, 1] = "Scientific Facts #22";

academic[47, 0] = "Venus is the only planet to spin clockwise.";
academic[47, 1] = "Scientific Facts #23";

academic[48, 0] = "A flea can accelerate faster than the Space Shuttle.";
academic[48, 1] = "Scientific Facts #24";

academic[49, 0] = "In physics, a state of matter is one of the distinct forms in which matter can exist. The four most common are solid, liquid, gas and plasma.";
academic[49, 1] = "Matter in Physics";

academic[50, 0] = "Classical Greek culture gave great importance to knowledge.";
academic[50, 1] = "Ancient Greece";

academic[51, 0] = "Herodotus is widely known as the 'father of history'. His Histories are eponymous of the entire field.";
academic[51, 1] = "Herodotus";

academic[52, 0] = "The Lelantine War (710 – 650 BC) is the earliest documented war of the ancient Greek period.";
academic[52, 1] = "Ancient Greece";

academic[53, 0] = "Athens suffered a land and agrarian crisis in the late 7th century BC, again resulting in civil strife.";
academic[53, 1] = "Ancient Greece";

academic[54, 0] = "The gods of Greek mythology are described as having essentially corporeal but ideal bodies.";
academic[54, 1] = "Greek Mythology";

academic[55, 0] = "Most gods were associated with specific aspects of life. For example, Aphrodite was the goddess of love and beauty.";
academic[55, 1] = "Greek Mythology";

academic[56, 0] = "There were ancient towns and cities that also adopted Heracles as a patron deity, contributing to the spread of his cult.";
academic[56, 1] = "Heracles";

academic[57, 0] = "In a fit of madness, induced by Hera, Heracles killed his children by Megara.";
academic[57, 1] = "Heracles";

academic[58, 0] = "The Romans gradually subdued the other peoples on the Italian peninsula, including the Etruscans.";
academic[58, 1] = "Ancient Rome";

academic[59, 0] = "The war began with the audacious invasion of Hispania by Hannibal, the Carthaginian general who had led operations on Sicily in the First Punic War.";
academic[59, 1] = "The Second Punic War";

//Qutoes (From movies and stuff)
quotes[0, 0] = "The die has been cast.";
quotes[0, 1] = "Gaius Julius Caesar";

quotes[1, 0] = "I came, I saw, I conquered.";
quotes[1, 1] = "Gaius Julius Caesar";

quotes[2, 0] = "An adversary is more hurt by desertion than by slaughter.";
quotes[2, 1] = "Vegetius";

quotes[3, 0] = "Conquered, we conquer.";
quotes[3, 1] = "Plautus";

quotes[4, 0] = "Woe to the vanquished.";
quotes[4, 1] = "Brennus, Chieftan of the Senones";

quotes[5, 0] = "Conquered Greece took captive her savage conqueror.";
quotes[5, 1] = "Horace";

quotes[6, 0] = "Stay a while, and listen!";
quotes[6, 1] = "Deckard Cain - Diablo";

quotes[7, 0] = "Everything is teetering on the edge of everything.";
quotes[7, 1] = "Spec Ops - The Line";

quotes[8, 0] = "I'll hunt you to the ends of the earth if I have to! Do you hear me? To the ends of the earth!";
quotes[8, 1] = "Arthas - Warcraft";

quotes[9, 0] = "In adversity, remember to keep an even mind.";
quotes[9, 1] = "Horace";

quotes[10, 0] = "You know you're in love when you can't fall asleep because reality is finally better than your dreams.";
quotes[10, 1] = "Dr. Suess";

quotes[11, 0] = "Get busy living or get busy dying.";
quotes[11, 1] = "Stephen King";

quotes[12, 0] = "Twenty years from now you will be more disappointed by the things that you didn't do than by the ones you did do.";
quotes[12, 1] = "Mark Twain";

quotes[13, 0] = "Great minds discuss ideas, average minds discuss events, small minds discuss people.";
quotes[13, 1] = "Eleanor Roosevelt";

quotes[14, 0] = "Those who dare to fail miserably can achieve greatly.";
quotes[14, 1] = "John F. Kennedy";

quotes[15, 0] = "It is hard to fail, but it is worse never to have tried to succeed.";
quotes[15, 1] = "Theodore Roosevelt";

quotes[16, 0] = "Let us always meet each other with smile, for the smile is the beginning of love.";
quotes[16, 1] = "Mother Theresa";

quotes[17, 0] = "Love is a serious mental disease.";
quotes[17, 1] = "Plato";

quotes[18, 0] = "It is our choices, that show what we truly are, far more than our abilities.";
quotes[18, 1] = "J. K. Rowling";

quotes[19, 0] = "Only put off until tomorrow what you are willing to die having left undone.";
quotes[19, 1] = "Pablo Picasso";

quotes[20, 0] = "Life is not a problem to be solved, but a reality to be experienced.";
quotes[20, 1] = "Soren Kierkegaard";

quotes[21, 0] = "Appear weak when you are strong, and strong when you are weak.";
quotes[21, 1] = "Sun Tzu, The Art of War";

quotes[22, 0] = "The supreme art of war is to subdue the enemy without fighting.";
quotes[22, 1] = "Sun Tzu, The Art of War";

quotes[23, 0] = "In the midst of chaos, there is also opportunity.";
quotes[23, 1] = "Sun Tzu, The Art of War";

quotes[24, 0] = "Who wishes to fight must first count the cost.";
quotes[24, 1] = "Sun Tzu, The Art of War";

quotes[25, 0] = "The only true wisdom is in knowing you know nothing.";
quotes[25, 1] = "Socrates";

quotes[26, 0] = "Quality is not an act, it is a habit.";
quotes[26, 1] = "Aristotle";

quotes[27, 0] = "The power of imagination makes us infinite.";
quotes[27, 1] = "John Muir";

quotes[28, 0] = "Originality is nothing but judicious imitation.";
quotes[28, 1] = "Voltaire";

quotes[29, 0] = "Life is made of ever so many partings welded together.";
quotes[29, 1] = "Charles Dickens";

//Artistic (Music)
artistic[0, 0] = "Why does the sun go on shining?";
artistic[0, 1] = "Skeeter Davis - The End of The World";

artistic[1, 0] = "Guess I had my last chance. And now this is our last dance.";
artistic[1, 1] = "Clean Bandit - Baby";

artistic[2, 0] = "So you think you can love me and leave me to die?";
artistic[2, 1] = "Queen - Bohemian Rhapsody";

artistic[3, 0] = "Just to blow it in the mall, doesn't mean that we're involved.";
artistic[3, 1] = "Meek Mill - Going Bad";

artistic[4, 0] = "Woo, made this here with all the ice on in the booth.";
artistic[4, 1] = "Travis Scott - SICKO MODE";

artistic[5, 0] = "Exchange for them chains that's all shiny with thick water.";
artistic[5, 1] = "Tyler, The Creator - Potato Salad";

artistic[6, 0] = "Maybe I'll be Tracer. I'm already Tracer.";
artistic[6, 1] = "The Living Tombstone - No Mercy";

artistic[7, 0] = "I'm a picture-perfect face with that wild in my veins.";
artistic[7, 1] = "K/DA - POP/STARS";

artistic[8, 0] = "Welcome to the jungle. You got to close your eyes and see.";
artistic[8, 1] = "Tash Sultana - Jungle";

artistic[9, 0] = "It's summer time and I hang on the vine. They're gonna make me into sweet red wine.";
artistic[9, 1] = "Marina and The Diamonds - Froot";

artistic[10, 0] = "I with my two fists of iron but I'm going nowhere.";
artistic[10, 1] = "Dion DiMucci - The Wanderer";

artistic[11, 0] = "And the lights, they glow. Like I just lost the World War.";
artistic[11, 1] = "Miike Snow - Genghis Khan";

artistic[12, 0] = "I wanna feel oppressed without any rest.";
artistic[12, 1] = "Jain - Makeba";

artistic[13, 0] = "I've been feeling old, I've been feeling cold.";
artistic[13, 1] = "Flume &amp; Chet Faker - Drop the Game";

artistic[14, 0] = "I build a home and wait for someone to tear it down.";
artistic[14, 1] = "Alice Merton - No Roots";

artistic[15, 0] = "So if you wanna dance dance. Let's start the show.";
artistic[15, 1] = "Ofenbach - Be Mine";

artistic[16, 0] = "I'm going blind from this sweet-sweet craving.";
artistic[16, 1] = "DNCE - Cake by the Ocean";

artistic[17, 0] = "Country roads, take me home. To the place I belong.";
artistic[17, 1] = "John Denver - Take Me Home, Country Roads";

artistic[18, 0] = "That's the price you pay. Leave behind your heartache, cast away.";
artistic[18, 1] = "Imagine Dragons - Natural";

artistic[19, 0] = "Yeah runnin' down a dream. That never would come to me.";
artistic[19, 1] = "Tom Petty - Runnin' Down A Dream";

artistic[20, 0] = "I got the eye of the tiger, a fighter. Dancing through the fire.";
artistic[20, 1] = "Katy Perry - Roar";

artistic[21, 0] = "I wish I knew then, what I know now.";
artistic[21, 1] = "Katy Perry - Wide Awake";

artistic[22, 0] = "Talkin' in my sleep at night, makin' myself crazy.";
artistic[22, 1] = "Dua Lipa - New Rules";

artistic[23, 0] = "These friends keep talkin' way too much.";
artistic[23, 1] = "Ariana Grande - Side to Side";

artistic[24, 0] = "Coming in out of the rain to hear the Jazz go down.";
artistic[24, 1] = "Dire Straits - Sultans of Swing";

artistic[25, 0] = "I get out the work and let the jay snap the scale.";
artistic[25, 1] = "Young Thug - Old English";

artistic[26, 0] = "Love in a thousand different flavors. I wish that I could taste them all tonight.";
artistic[26, 1] = "Jason Derulo - Swalla";

artistic[27, 0] = "I was told when I get older all my fears would shrink.";
artistic[27, 1] = "Twenty One Pilots - Stressed Out";

artistic[28, 0] = "When I leave don't save my seat, I'll be back when it's all complete.";
artistic[28, 1] = "Twenty One Pilots - Chlorine";

artistic[29, 0] = "All my enemies who wouldn't wish who I was. But it's fun to fantasize.";
artistic[29, 1] = "Twenty One Pilots - Ride";



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables for both modes
//Randomize seed
randomize()
//Player Input
player_input = "";
//Random Word
display_word = "";
//Real Time Variable
real_time = 0;
//Time Variable
time = 0;
//Score Variable
best_score = 0;
//Color
color = c_white;
//Check if you're still typing
pressed = 0;


//Misc vars
//Used for word checking
i = -1;
j = -1;

//Used for correct letter checking for combos
ok = 1;
z = -1;

word_count = 0; //word count 
letter_count_correct = 0; //letter count
best_letter_count = 0; //best letter count
//Combos
comboer = 0;
//[letter count required to proceed to next level, combo reward multiplied by score x actual level]
letter_combo[0, 0] = 25;
letter_combo[0, 1] = 1.0;

letter_combo[1, 0] = 50;
letter_combo[1, 1] = 2;

letter_combo[2, 0] = 75;
letter_combo[2, 1] = 3;

letter_combo[3, 0] = 100;
letter_combo[3, 1] = 4;

//Colors
color_combo = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Final stats on a run
final_score = 0;
final_combo = 0;
final_words = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colors
//Correct text colors
text_colors[0] = make_color_rgb(255,193,6); // Orange
text_colors[1] = make_color_rgb(6,68,255); //blue


//Dark Bg
bg_colors[0, 0] = make_color_rgb(8,48,69);
bg_colors[0, 1] = c_white;
bg_colors[0, 2] = text_colors[0];
bg_colors[0, 3] = c_black; //outline

bg_colors[1, 0] = c_black;
bg_colors[1, 1] = c_white;
bg_colors[1, 2] = text_colors[0];
bg_colors[1, 3] = c_black; //outline

bg_colors[2, 0] = make_color_rgb(16,120,149);
bg_colors[2, 1] = c_white;
bg_colors[2, 2] = text_colors[0];
bg_colors[2, 3] = c_black; //outline

bg_colors[3, 0] = make_color_rgb(16, 55, 106);
bg_colors[3, 1] = c_white;
bg_colors[3, 2] = text_colors[0];
bg_colors[3, 3] = c_black; //outline

bg_colors[4, 0] = make_color_rgb(65, 37, 106);
bg_colors[4, 1] = c_white;
bg_colors[4, 2] = text_colors[0];
bg_colors[4, 3] = c_black; //outline

bg_colors[5, 0] = make_color_rgb(65, 37, 67);
bg_colors[5, 1] = c_white;
bg_colors[5, 2] = text_colors[0];
bg_colors[5, 3] = c_black; //outline

bg_colors[6, 0] = make_color_rgb(65, 64, 67);
bg_colors[6, 1] = c_white;
bg_colors[6, 2] = text_colors[0];
bg_colors[6, 3] = c_black; //outline

bg_colors[7, 0] = make_color_rgb(15, 64, 67);
bg_colors[7, 1] = c_white;
bg_colors[7, 2] = text_colors[0];
bg_colors[7, 3] = c_black; //outline

bg_colors[8, 0] = make_color_rgb(82, 38, 91);
bg_colors[8, 1] = c_white;
bg_colors[8, 2] = text_colors[0];
bg_colors[8, 3] = c_black; //outline

bg_colors[9, 0] = make_color_rgb(68, 5, 7);
bg_colors[9, 1] = c_white;
bg_colors[9, 2] = text_colors[0];
bg_colors[9, 3] = c_black; //outline

bg_colors[10, 0] = make_color_rgb(72, 84, 13);
bg_colors[10, 1] = c_white;
bg_colors[10, 2] = text_colors[0];
bg_colors[10, 3] = c_black; //outline

bg_colors[11, 0] = make_color_rgb(0, 77, 59);
bg_colors[11, 1] = c_white;
bg_colors[11, 2] = text_colors[0];
bg_colors[11, 3] = c_black; //outline

bg_colors[12, 0] = make_color_rgb(136, 36, 59);
bg_colors[12, 1] = c_white;
bg_colors[12, 2] = text_colors[0];
bg_colors[12, 3] = c_black; //outline

bg_colors[13, 0] = make_color_rgb(28, 109, 103);
bg_colors[13, 1] = c_white;
bg_colors[13, 2] = text_colors[0];
bg_colors[13, 3] = c_black; //outline

bg_colors[14, 0] = make_color_rgb(67, 115, 127);
bg_colors[14, 1] = c_white;
bg_colors[14, 2] = text_colors[0];
bg_colors[14, 3] = c_black; //outline


//Light bg
bg_colors[15, 0] = make_color_rgb(241,243,244);
bg_colors[15, 1] = c_black;
bg_colors[15, 2] = text_colors[1];
bg_colors[15, 3] = c_white; //outline

bg_colors[16, 0] = make_color_rgb(181,197,136);
bg_colors[16, 1] = c_black;
bg_colors[16, 2] = text_colors[1];
bg_colors[16, 3] = c_white; //outline

bg_colors[17, 0] = make_color_rgb(229,222,214);
bg_colors[17, 1] = c_black;
bg_colors[17, 2] = text_colors[1];
bg_colors[17, 3] = c_white; //outline

bg_colors[18, 0] = make_color_rgb(185, 142, 229);
bg_colors[18, 1] = c_black;
bg_colors[18, 2] = text_colors[1];
bg_colors[18, 3] = c_white; //outline

bg_colors[19, 0] = make_color_rgb(206, 214, 229);
bg_colors[19, 1] = c_black;
bg_colors[19, 2] = text_colors[1];
bg_colors[19, 3] = c_white; //outline

bg_colors[20, 0] = make_color_rgb(206, 214, 164);
bg_colors[20, 1] = c_black;
bg_colors[20, 2] = text_colors[1];
bg_colors[20, 3] = c_white; //outline

bg_colors[21, 0] = make_color_rgb(236, 166, 164);
bg_colors[21, 1] = c_black;
bg_colors[21, 2] = text_colors[1];
bg_colors[21, 3] = c_white; //outline

bg_colors[22, 0] = make_color_rgb(253, 246, 24);
bg_colors[22, 1] = c_black;
bg_colors[22, 2] = text_colors[1];
bg_colors[22, 3] = c_white; //outline

bg_colors[23, 0] = make_color_rgb(178, 181, 201);
bg_colors[23, 1] = c_black;
bg_colors[23, 2] = text_colors[1];
bg_colors[23, 3] = c_white; //outline

bg_colors[24, 0] = make_color_rgb(230, 245, 236);
bg_colors[24, 1] = c_black;
bg_colors[24, 2] = text_colors[1];
bg_colors[24, 3] = c_white; //outline

bg_colors[25, 0] = make_color_rgb(191, 186, 236);
bg_colors[25, 1] = c_black;
bg_colors[25, 2] = text_colors[1];
bg_colors[25, 3] = c_white; //outline

bg_colors[26, 0] = make_color_rgb(241, 186, 236);
bg_colors[26, 1] = c_black;
bg_colors[26, 2] = text_colors[1];
bg_colors[26, 3] = c_white; //outline

bg_colors[27, 0] = make_color_rgb(240, 166, 163);
bg_colors[27, 1] = c_black;
bg_colors[27, 2] = text_colors[1];
bg_colors[27, 3] = c_white; //outline

bg_colors[28, 0] = make_color_rgb(183, 254, 253);
bg_colors[28, 1] = c_black;
bg_colors[28, 2] = text_colors[1];
bg_colors[28, 3] = c_white; //outline

bg_colors[29, 0] = make_color_rgb(242, 172, 127);
bg_colors[29, 1] = c_black;
bg_colors[29, 2] = text_colors[1];
bg_colors[29, 3] = c_white; //outline
















</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///misc
music_playing = 1;
se_playing = 1;
amb_playing = 1;

mode_to_play = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update State
state_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Execute
state_execute();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resolution checker
if (!window_get_fullscreen())
{

global.width = display_get_width();
global.height = display_get_height();

global.displayWidth = global.width; //Set the default display width
global.displayHeight = global.height; //Set the default display Height

scr_resolution(global.displayWidth, global.displayHeight);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (se_playing)
{
audio_group_set_gain(soundeffects, 0, 0);
se_playing = 0;
}
else
{
audio_group_set_gain(soundeffects, 1, 0);
se_playing = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (music_playing)
{
audio_group_set_gain(music, 0, 0);
music_playing = 0;
}
else
{
audio_group_set_gain(music, 1, 0);
music_playing = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
